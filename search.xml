<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搭建git服务器]]></title>
    <url>%2Fposts%2Fc5e160bf%2F</url>
    <content type="text"><![CDATA[下载安装 gitgit是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 此实验以 CentOS 7.2 x64 的系统为环境，搭建 git 服务器。 安装依赖库和编译工具为了后续安装能正常进行，我们先来安装一些相关依赖库和编译工具1yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel 安装编译工具1yum install gcc perl-ExtUtils-MakeMaker 下载 git选一个目录，用来放下载下来的安装包，这里将安装包放在 /usr/local/src 目录里1cd /usr/local/src 到官网找一个新版稳定的源码包下载到 /usr/local/src 文件夹里1wget https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz 解压和编译解压下载的源码包1tar -zvxf git-2.10.0.tar.gz 解压后进入 git-2.10.0 文件夹1cd git-2.10.0 执行编译1make all prefix=/usr/local/git 编译完成后, 安装到 /usr/local/git 目录下1make install prefix=/usr/local/git 配置环境变量 将 git 目录加入 PATH将原来的 PATH 指向目录修改为现在的目录1echo 'export PATH=$PATH:/usr/local/git/bin' &amp;&amp; /etc/bashrc 生效环境变量1source /etc/bashrc 此时我们能查看 git 版本号，说明我们已经安装成功了。1git --version 创建 git 账号密码 创建 git 账号为我们刚刚搭建好的 git 创建一个账号1useradd -m gituser 然后为这个账号设置密码1passwd gituser 然后自己输入2次自定义密码！ 初始化 git 仓库并配置用户权限 创建 git 仓库并初始化我们创建 /data/repositories 目录用于存放 git 仓库1mkdir -p /data/repositories 创建好后，初始化这个仓库1cd /data/repositories/ &amp;amp;&amp;amp; git init --bare test.git 出现如下代码为成功Initialized empty Git repository in /data/repositories/test.git/ 配置用户权限给 git 仓库目录设置用户和用户组并设置权限12chown -R gituser:gituser /data/repositorieschmod 755 /data/repositories 查找 git-shell 所在目录 , 编辑 /etc/passwd 文件，将最后一行关于 gituser 的登录 shell 配置改为 git-shell 的目录（安全目的, 限制 git 账号的 ssh 连接只能是登录 git-shell）安全目的, 限制 git 账号的 ssh 连接只能是登录 git-shell如下1gituser:x:500:500::/home/gituser:/usr/local/git/bin/git-shell 使用搭建好的 Git 服务克隆 test repo 到本地（自己也可以克隆别的东西哦）,要求输入之前的自定义密码 1cd ~ &amp;amp;&amp;amp; git clone gituser@123.207.16.21:/data/repositories/test.git 实验完成恭喜，Git 服务器搭建完成, 从此以后你可以方便地将你的本地代码提交到 Git 服务器托管了]]></content>
      <tags>
        <tag>环境搭建</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos安装伪分布式]]></title>
    <url>%2Fposts%2F8918ab64%2F</url>
    <content type="text"><![CDATA[教程环境和说明 软硬件环境CentOS 7.2 64 位OpenJDK- 1.8Hadoop- 3.0.2 关于本教程的说明云实验室云主机自动使用 root 账户登录系统，因此本教程中所有的操作都是以 root 用户来执行的。若要在自己的云主机上进行本教程的实验，为了系统安全，建议新建一个账户登录后再进行后续操作。 安装 SSH 客户端 安装SSH：sudo yum install openssh-clients openssh-server 安装完成后，可以使用下面命令进行测试：ssh localhost输入 root 账户的密码，如果可以正常登录，则说明SSH安装没有问题。测试正常后使用 exit 命令退出ssh。 安装 JAVA 环境 安装 JDK使用 yum 来安装1.8版本 OpenJDK：1sudo yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel 安装完成后，输入 java 和 javac 命令，如果能输出对应的命令帮助，则表明jdk已正确安装。 配置 JAVA 环境变量执行命令:vim ~/.bashrc，在结尾追加：【文件名可能不一样哦】 1export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk 保存文件后执行下面命令使 JAVA_HOME 环境变量生效: 1source ~/.bashrc 为了检测系统中 JAVA 环境是否已经正确配置并生效，可以分别执行下面命令: 12java -version$JAVA_HOME/bin/java -version 若两条命令输出的结果一致，且都为我们前面安装的 openjdk-1.8.0 的版本，则表明 JDK 环境已经正确安装并配置 安装 Hadoop 下载 Hadoop本教程使用 hadoop-3.0.2 版本，使用 wget 工具在线下载（注：本教程是从清华大学的镜像源下载，如果下载失败或报错，可以自己在网上找到国内其他一个镜像源下载 3.0.2 版本的 hadoop 即可）： 1wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.0.2/hadoop-3.0.2.tar.gz 安装 Hadoop将 Hadoop 安装到 /usr/local 目录下: 1tar -zxf hadoop-3.0.2.tar.gz -C /usr/local 对安装的目录进行重命名，便于后续操作方便:12cd /usr/localmv ./hadoop-3.0.2/ ./hadoop 检查Hadoop是否已经正确安装:1/usr/local/hadoop/bin/hadoop version 如果成功输出hadoop的版本信息，表明hadoop已经成功安装。 Hadoop 伪分布式环境配置Hadoop伪分布式模式使用多个守护线程模拟分布的伪分布运行模式。 设置 Hadoop 的环境变量vim ~/.bashrc，在结尾追加如下内容 12345678export HADOOP_HOME=/usr/local/hadoopexport HADOOP_INSTALL=$HADOOP_HOMEexport HADOOP_MAPRED_HOME=$HADOOP_HOMEexport HADOOP_COMMON_HOME=$HADOOP_HOMEexport HADOOP_HDFS_HOME=$HADOOP_HOMEexport YARN_HOME=$HADOOP_HOMEexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/nativeexport PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin 使Hadoop环境变量配置生效: 1source ~/.bashrc 修改 Hadoop 的配置文件Hadoop的配置文件位于安装目录的 /etc/hadoop 目录下，在本教程中即位于 /url/local/hadoop/etc/hadoop 目录下，需要修改的配置文件为如下两个:下面两个不是代码 12/usr/local/hadoop/etc/hadoop/core-site.xml/usr/local/hadoop/etc/hadoop/hdfs-site.xml 编辑 core-site.xml，vim /usr/local/hadoop/etc/hadoop/core-site.xml修改&lt;configuration&amp;&lt;/configuration&amp;节点的内容为如下所示：1234567891011&lt;configuration&amp; &lt;property&amp; &lt;name&amp;hadoop.tmp.dir&lt;/name&amp; &lt;value&amp;file:/usr/local/hadoop/tmp&lt;/value&amp; &lt;description&amp;location to store temporary files&lt;/description&amp; &lt;/property&amp; &lt;property&amp; &lt;name&amp;fs.defaultFS&lt;/name&amp; &lt;value&amp;hdfs://localhost:9000&lt;/value&amp; &lt;/property&amp;&lt;/configuration&amp; 同理，编辑 hdfs-site.xml，vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml修改&lt;configuration&amp;&lt;/configuration&amp;节点的内容为如下所示：1234567891011121314&lt;configuration&amp; &lt;property&amp; &lt;name&amp;dfs.replication&lt;/name&amp; &lt;value&amp;1&lt;/value&amp; &lt;/property&amp; &lt;property&amp; &lt;name&amp;dfs.namenode.name.dir&lt;/name&amp; &lt;value&amp;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&amp; &lt;/property&amp; &lt;property&amp; &lt;name&amp;dfs.datanode.data.dir&lt;/name&amp; &lt;value&amp;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&amp; &lt;/property&amp;&lt;/configuration&amp; 格式化NameNode格式化NameNode命令：1/usr/local/hadoop/bin/hdfs namenode -format 在输出信息中看到如下信息，则表示格式化成功:12Storage directory /usr/local/hadoop/tmp/dfs/name has been successfully formatted.Exiting with status 0 启动 NameNode 和 DataNode 守护进程启动 NameNode 和 DataNode 进程:1/usr/local/hadoop/sbin/start-dfs.sh 执行过程中会提示输入用户密码，输入 root 用户密码即可。另外，启动时ssh会显示警告提示是否继续连接，输入 yes 即可。检查 NameNode 和 DataNode 是否正常启动:1jps 如果NameNode和DataNode已经正常启动，会显示NameNode、DataNode和SecondaryNameNode的进程信息:12345[hadoop@VM_80_152_centos ~]$ jps3689 SecondaryNameNode3520 DataNode3800 Jps3393 NameNode 运行 Hadoop 伪分布式实例Hadoop自带了丰富的例子，包括 wordcount、grep、sort 等。下面我们将以grep例子为教程，输入一批文件，从中筛选出符合正则表达式 dfs[a-z.]+ 的单词并统计出现的次数。 查看 Hadoop 自带的例子Hadoop 附带了丰富的例子, 执行下面命令可以查看： 12cd /usr/local/hadoop./bin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-3.0.2.jar 在 HDFS 中创建用户目录在 HDFS 中创建用户目录 hadoop： 1/usr/local/hadoop/bin/hdfs dfs -mkdir -p /user/hadoop 准备实验数据本教程中，我们将以 Hadoop 所有的 xml 配置文件作为输入数据来完成实验。执行下面命令在 HDFS 中新建一个 input 文件夹并将 hadoop 配置文件上传到该文件夹下： 123cd /usr/local/hadoop./bin/hdfs dfs -mkdir /user/hadoop/input./bin/hdfs dfs -put ./etc/hadoop/*.xml /user/hadoop/input 使用下面命令可以查看刚刚上传到 HDFS 的文件:1/usr/local/hadoop/bin/hdfs dfs -ls /user/hadoop/input 运行实验运行实验:12cd /usr/local/hadoop./bin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-3.0.2.jar grep /user/hadoop/input /user/hadoop/output 'dfs[a-z.]+' 上述命令以 HDFS 文件系统中的 input 为输入数据来运行 Hadoop 自带的 grep 程序，提取其中符合正则表达式 dfs[a-z.]+ 的数据并进行次数统计，将结果输出到 HDFS 文件系统的 output 文件夹下。 查看运行结果上述例子完成后的结果保存在 HDFS 中，通过下面命令查看结果:1/usr/local/hadoop/bin/hdfs dfs -cat /user/hadoop/output/* 如果运行成功，可以看到如下结果:12341 dfsadmin1 dfs.replication1 dfs.namenode.name.dir1 dfs.datanode.data.dir 删除 HDFS 上的输出结果删除 HDFS 中的结果目录:1/usr/local/hadoop/bin/hdfs dfs -rm -r /user/hadoop/output 运行 Hadoop 程序时，为了防止覆盖结果，程序指定的输出目录不能存在，否则会提示错误，因此在下次运行前需要先删除输出目录。 关闭 Hadoop 进程关闭 Hadoop 进程命令:1/usr/local/hadoop/sbin/stop-dfs.sh 再起启动只需要执行下面命令：1/usr/local/hadoop/sbin/start-dfs.sh 部署完成大功告成恭喜您已经完成了搭建 Hadoop 伪分布式环境的学习!]]></content>
      <categories>
        <category>centos系统应用</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建Ftp]]></title>
    <url>%2Fposts%2F9ac9cbe6%2F</url>
    <content type="text"><![CDATA[基于centos环境搭建，其他环境使用命令稍有不同 安装并启动 FTP 服务 安装 VSFTPD使用 yum 安装 vsftpd： 1yum install vsftpd -y 启动 VSFTPD安装完成后，启动 FTP 服务： 1service vsftpd start 启动后，可以看到系统已经监听了 21 端口：1netstat -nltp | grep 21 此时，访问 ftp://你的服务器ip 可浏览机器上的 /var/ftp 目录了。 配置 FTP 权限目前 FTP 服务登陆允许匿名登陆，也无法区分用户访问，我们需要配置 FTP 访问权限 了解 VSFTP 配置vsftpd 的配置目录为 /etc/vsftpd，包含下列的配置文件： vsftpd.conf 为主要配置文件 ftpusers 配置禁止访问 FTP 服务器的用户列表 user_list 配置用户访问控制阅读上述配置以了解更多信息。如果您准备好了，点击下一步开始修改配置来设置权限。 阻止匿名访问和切换根目录匿名访问和切换根目录都会给服务器带来安全风险，我们把这两个功能关闭。编辑 /etc/vsftpd/vsftpd.conf，打开命令vim /etc/vsftpd/vsftpd.conf找到下面两处配置并修改：12345# 禁用匿名用户(修改Yes为NO)anonymous_enable=NO# 禁止切换根目录(去掉原始最前面#)chroot_local_user=YES 编辑完成后，按 Esc 和:wq 保存配置，重新启动 FTP 服务，如：1service vsftpd restart 创建 FTP 用户创建一个用户 ftpuser（为了方便后面的实验步骤，不建议使用其它的用户名）1useradd ftpuser 为用户 ftpuser 设置密码(下面命令中的密码为实验室为您生成，为了方便后面的实验步骤，不建议使用其他密码)1echo "j9eM57ca" | passwd ftpuser --stdin 限制该用户仅能通过 FTP 访问限制用户 ftpuser 只能通过 FTP 访问服务器，而不能直接登录服务器： 1usermod -s /sbin/nologin ftpuser 为用户分配主目录为用户 ftpuser 创建主目录并约定：/data/ftp 为主目录, 该目录不可上传文件/data/ftp/pub 文件只能上传到该目录下 1mkdir -p /data/ftp/pub 创建登录欢迎文件 ：（方便用户登录后可以看到欢迎信息，并且确定用户确实登录到了主目录上。 ）1echo "Welcome to use FTP service." &amp; /data/ftp/welcome.txt 设置访问权限：1chmod a-w /data/ftp &amp;amp;&amp;amp; chmod 777 -R /data/ftp/pub 设置为用户的主目录：1usermod -d /data/ftp ftpuser 准备域名和证书注：如果您不需要通过域名访问 FTP 服务器则可以直接进入下一步”跳过域名和证书的准备环节自己准备域名和证书哦~= 域名解析域名购买完成后, 需要将域名解析到自己的云主机上，选择A解析模式记录为二级域名头，记录值为你的服务器ip；域名设置解析后需要过一段时间才会生效，通过 ping 命令检查域名是否生效，如：1ping www.yourdomain.com 如果 ping 命令返回的信息中含有你设置的解析的 IP 地址，说明解析成功。 访问 FTP 服务FTP 服务已安装并配置完成，下面我们来使用该 FTP 服务 访问 FTP 服务根据您个人的工作环境，选择一种方式来访问已经搭建的 FTP 服务通过 Windows 资源管理器访问Windows 用户可以复制下面的链接(如果打开不了，联系服务器厂商查看服务器防火墙或使用别的ftp根据尝试)到资源管理器的地址栏访问： 12格式为：ftp://用户名:密码@服务器ipftp://ftpuser:j9eM57ca@服务器ip 通过 FTP 客户端工具访问FTP 客户端工具众多，下面推荐两个常用的： WinSCP - Windows 下的 FTP 和 SFTP 连接客户端 FileZilla - 跨平台的 FTP 客户端，支持 Windows 和 Mac下载和安装 FTP 客户端后，使用下面的凭据进行连接即可：主机：你的服务器ip 如果能够正常连接，那么大功告成，您可以开始使用属于您自己的 FTP 服务器了！接下来，请上传任意一张图片到您的 FTP 服务器上的pub目录下，然后，就可以在 /data/ftp/pub 中看到了。注意: 请不要直接上传文件到根目录下，您应该选择上传到 pub 目录下 大功告成恭喜！您已经成功完成了搭建 FTP 服务器的实验任务.]]></content>
      <categories>
        <category>centos系统应用</category>
      </categories>
      <tags>
        <tag>非集成环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建LNMP环境]]></title>
    <url>%2Fposts%2F6be34445%2F</url>
    <content type="text"><![CDATA[LNMP是指一组通常一起使用来运行动态网站或者服务器的自由软件名称首字母缩写。L指Linux（此处基于centos环境），N指Nginx，M一般指MySQL(，也可以指MariaDB)，P一般指PHP(，也可以指Perl或Python)。 安装 Nginx 使用 yum 安装 Nginx：1yum install nginx -y 修改 /etc/nginx/conf.d/default.conf，去除对 IPv6 （centos6不支持IPv6）地址的监听，可参考下面的代码示例：打开conf文件命令：/etc/nginx/conf.d/default.conf123456789101112131415161718192021server &#123; listen 80 default_server; # listen [::]:80 default_server; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / &#123; &#125; error_page 404 /404.html; location = /40x.html &#123; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; &#125;&#125; 修改完成后，启动 Nginx：1nginx 此时，可访问实验机器外网 HTTP 服务，外网ip，来确认是否已经安装成功。 安装 MySQL 数据库服务 安装 MySQL使用 yum 安装 MySQL：1yum install mysql-server -y 安装完成后，启动 MySQL 服务：1service mysqld restart 设置 MySQL 账户 root 密码（下面命令中的密码是教程为您自动生成的，为了方便实验的进行，不建议使用其它密码。如果设置其它密码，请把密码记住，在后续的步骤会使用到。）1/usr/bin/mysqladmin -u root password 'VYEk1y_5' 将 MySQL 设置为开机自动启动：1chkconfig mysqld on 搭建 PHP 环境 安装 PHP使用 yum 安装 PHP：（CentOS 6 默认已经安装了 PHP-FPM 及 PHP-MYSQL，下面命令执行的可能会提示已经安装。）1yum install php php-fpm php-mysql -y 安装之后，启动 PHP-FPM 进程：1service php-fpm start 启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口(PHP-FPM 默认监听 9000 端口)1netstat -nlpt | grep php-fpm 把 PHP-FPM 也设置成开机自动启动：1chkconfig php-fpm on 配置 Nginx 并运行 PHP 程序 配置 Nginx在 /etc/nginx/conf.d 目录中新建一个名为 php.conf 的文件，1vim /etc/nginx/conf.d/php.conf 并配置 Nginx 端口 ，配置示例如下：1234567891011server &#123; listen 8000; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 location ~ .php$ &#123; root /usr/share/php; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125;&#125; 修改配置完成后，重启 nginx 服务1service nginx restart 这时候，我们就可以在/usr/share/php 目录下新建一个 info.phpvim /usr/share/php/info.php文件来检查 php 是否安装成功了，文件内容参考如下：1&lt;?php phpinfo(); ?&gt; 此时，访问 http://服务器ip/info.php 可浏览到我们刚刚创建的 info.php 页面了 完成实验恭喜！您已经成功完成了搭建 LNMP 服务器的实验任务。]]></content>
      <categories>
        <category>centos系统应用</category>
      </categories>
      <tags>
        <tag>非集成环境</tag>
        <tag>环境搭建</tag>
        <tag>LNMP</tag>
      </tags>
  </entry>
</search>
